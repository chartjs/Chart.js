# This workflow will run tests using node and then publish a package to GitHub Packages when a release is created
# For more information see: https://help.github.com/actions/language-and-framework-guides/publishing-nodejs-packages

name: Node.js Package

on:
  release:
    types: [published]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js
      uses: actions/setup-node@v1
    - name: Setup xvfb
      run: |
        Xvfb :99 -screen 0 1024x768x24 &
        echo "::set-env name=DISPLAY:::99.0"
    - name: Test
      run: |
        npm ci
        npm test

  publish-npm:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 12
          registry-url: https://registry.npmjs.org/
      # Since we created the release in the UI, we need to find it.
      # This step gets the release from the GITHUB_REF env var
      - name: Get release
        id: get_release
        uses: bruceadams/get-release@v1.2.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - run: npm ci
      - run: npm install -g json
      - run: json -I -f package.json -e "this.version=\"$GITHUB_REF\""
      - run: json -I -f package-lock.json -e "this.version=\"$GITHUB_REF\""
      - run: npm run build
      - run: ./scripts/docs-config.sh
      - run: npm run docs
      - run: npm run typedoc
      - run: npm pack
      - run: ./scripts/publish.sh
      # On releases, GITHUB_REF is the tag name which is the version
      # However, it will include the leading "v", so we need to strip that
      # first character off here since we want the docs folder to not have
      # the "v" in it.
      - run: ./scripts/deploy-docs.sh "${GITHUB_REF:1}"
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
      - name: Upload chart.js
        id: upload-chart-js
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release.outputs.upload_url }}
          asset_path: ./dist/chart.js
          asset_name: chart.js
          asset_content_type: text/javascript
      - name: Upload chart.min.js
        id: upload-chart-min-js
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release.outputs.upload_url }}
          asset_path: ./dist/chart.min.js
          asset_name: chart.min.js
          asset_content_type: text/javascript
      - name: Upload chart.esm.js
        id: upload-chart-esm-js
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release.outputs.upload_url }}
          asset_path: ./dist/chart.esm.js
          asset_name: chart.esm.js
          asset_content_type: text/javascript
      - name: Upload helpers.esm.js
        id: upload-helpers-esm-js
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release.outputs.upload_url }}
          asset_path: ./dist/helpers.esm.js
          asset_name: helpers.esm.js
          asset_content_type: text/javascript